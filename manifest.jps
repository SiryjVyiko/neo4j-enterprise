---
type: install
version: 1.1
id: neo4j-enterprise
baseUrl: https://raw.githubusercontent.com/jelastic-jps/neo4j-enterprise/master
description:
  text: /text/description.md
categories:
  - apps/popular
  - apps/clusters
  - apps/dev-and-admin-tools
  - apps/microservices

logo: /images/neo4j-logo.png
name: Neo4j Enterprise Cluster
skipNodeEmails: true

globals:
  password: ${fn.password(20)}
  discoveryport: 5000

onInstall:
  - forEach(nodes.cp):
      adjust-env-ars:
         nodeId: ${@i.id}
  - forEach(nodes.replicas):
      adjust-env-ars:
         nodeId: ${@i.id}
  - devops-stuff
  - setAuth

onUpdate:
  - testcmd

settings:
  fields:
  - type: spinner
    name: cores
    caption: Cores
    min: 3
    max: 5
    default: ${settings.cores}

  - type: spinner
    name: replicas
    caption: Replicas
    min: 1
    max: 5
    default: ${settings.replicas}

nodes:
- count: ${settings.cores}
  cloudlets: 32
  image: "neo4j:3.3.2-enterprise"
  nodeGroup: cp
  displayName: Core
  extip: true
  startServiceOnCreation: false
  env:
    JELASTIC_EXPOSE: 7474
    NEO4J_dbms_mode: CORE
    NEO4J_causal__clustering_discovery__type: DNS
    NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
    NEO4J_dbms_security_auth__enabled: true
    NEO4J_AUTH: neo4j/${globals.password}

- count: ${settings.replicas}
  cloudlets: 32
  image: "neo4j:3.3.2-enterprise"
  nodeGroup: replicas
  displayName: Replica
  extip: false
  startServiceOnCreation: false
  env:
    JELASTIC_EXPOSE: 7474
    NEO4J_dbms_mode: READ_REPLICA
    NEO4J_causal__clustering_discovery__type: DNS
    NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
    NEO4J_dbms_security_auth__enabled: false
    NEO4J_AUTH: neo4j/${globals.password}

actions:
  adjust-env-ars:
    api[${this.nodeId}]: env.control.AddContainerEnvVars
    vars:
      NEO4J_causal__clustering_initial__discovery__members: ${env.domain}:${globals.discoveryport}
      NEO4J_dbms_connectors_defaultAdvertisedAddress: node${this.nodeId}-${env.domain}
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"


  devops-stuff:
    cmd[cp]: |-
       /sbin/rc-update add jelinit default
       /sbin/service iptables save
       /sbin/rc-service jelinit start
       #while $(! nc -vz localhost 7474) ;do sleep 1s; done
       echo
    cmd[replicas]: |-
       /sbin/rc-update add jelinit default
       /sbin/service iptables save
       /sbin/rc-service jelinit start

  setAuth:
    cmd[cp:master]: |-
       /var/lib/neo4j/bin/neo4j-admin set-initial-password ${globals.password}

success: /text/success.md
